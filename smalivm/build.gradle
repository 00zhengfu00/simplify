buildscript {
    dependencies {
        classpath depends.proguard_gradle
    }
    repositories {
        mavenCentral()
    }
}

dependencies {
    // Object cloning
    compile 'uk.com.robust-it:cloning:1.9.5'

    // Easy method reflection
    compile 'commons-beanutils:commons-beanutils:1.9.3'

    // Lazy
    compile depends.commons_lang
    compile depends.guava

    // Primitive collections
    compile depends.trove4j

    // Logging facade
    compile depends.slf4j_api

    // Parsing and writing dex files
    compile group: 'org.smali', name: 'dexlib2', version: '2.2.1'
    compile group: 'org.smali', name: 'smali', version: '2.2.1'
    compile group: 'org.smali', name: 'baksmali', version: '2.2.1'

    // For dynamic java.lang.Class generation
    compile group: 'org.ow2.asm', name: 'asm', version: '6.0_ALPHA'

    // Contains Android framework classes that should be reflected instead of virtually executed
    // Reflection is much faster and more robust than virtual execution
    compile files('libs/android-local.jar')

    testCompile depends.junit
    testCompile depends.mockito
    testCompile depends.perfidix // Benchmarking
}

task fatJar(type: Jar) {
    from sourceSets.main.output
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task updateReferenceFramework(type: JavaExec) {
    description 'Update Android reference framework artifacts. Use -PsmaliPath to specify path in resources/smali/, e.g. -PsmaliPath=android-25'
    classpath sourceSets.main.runtimeClasspath
    main = "org.cf.smalivm.dex.FrameworkJarBuilder"
    def smaliPath = project.hasProperty('smaliPath') ?  project.getProperty('smaliPath') : 'android-25'

    args smaliPath, 'src/main/resources/framework/android-framework.jar'
}

configurations {
  testArtifacts
}

task proguard(type: proguard.gradle.ProGuardTask, dependsOn: fatJar) {
    def outFile = fatJar.destinationDir.getPath() + '/' + fatJar.baseName + '-' + fatJar.version + '-proguard' + '.' + fatJar.extension

    injars fatJar.archivePath
    outjars outFile

    libraryjars "${System.properties['java.home']}/lib/rt.jar"

    dontobfuscate
    //dontoptimize
    optimizations '!code/allocation/variable'

    keepclassmembers 'enum * { public static **[] values(); public static ** valueOf(java.lang.String); }'
    keepattributes '*'

    keep 'public class * { public protected *; }'

    dontwarn
    verbose
}
