buildscript {
    dependencies {
        classpath depends.proguard_gradle
    }
    repositories {
        mavenCentral()
    }
}

dependencies {
    compile project(':smalivm')
    compile depends.guava
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile depends.trove4j
    compile depends.slf4j_api
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    testCompile project(':smalivm').sourceSets.test.output
    testCompile project(':smalivm').sourceSets.test.resources
    testCompile depends.mockito
    testCompile depends.perfidix
    testCompile depends.junit_compile
    testRuntime depends.junit_engine
    testRuntime depends.junit_runner
}

test.dependsOn project(':smalivm').tasks.getByName('testClasses')

// Build a separate jar that contains all dependencies
task fatJar(type: Jar) {
    from sourceSets.main.output
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    manifest {
        attributes('Main-Class': 'org.cf.simplify.Main')
    }

    doLast {
        if (!System.getProperty('os.name').toLowerCase().contains('windows')) {
            ant.symlink(link: file("${destinationDir}/simplify.jar"), resource: archivePath, overwrite: true)
        }
    }
}

task proguard(type: proguard.gradle.ProGuardTask, dependsOn: fatJar) {
    def outFile = fatJar.destinationDir.getPath() + '/' + fatJar.baseName + '-' + fatJar.version + '-proguard' + '.' + fatJar.extension

    injars fatJar.archivePath
    outjars outFile

    libraryjars "${System.properties['java.home']}/lib/rt.jar"

    dontobfuscate
    //dontoptimize
    optimizations '!code/allocation/variable'

    keepclassmembers 'enum * { public static **[] values(); public static ** valueOf(java.lang.String); }'
    keepattributes '*Annotation*,Signature,InnerClasses,EnclosingMethod'

    keep 'public class org.cf.simplify.Main { public static void main(java.lang.String[]); }'
    keep 'public class android.util.**  { *; }'

    keep 'class org.apache.commons.logging.** { public protected *; }'
    keep 'public class ch.qos.** { public protected *; }'
    keep 'public class org.slf4j.** { public protected *; }'

    dontwarn
    verbose
}
